#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4230235865906954894) {
   out_4230235865906954894[0] = 0;
   out_4230235865906954894[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4230235865906954894[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4230235865906954894[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4230235865906954894[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4230235865906954894[5] = -sin(in_vec[1]);
   out_4230235865906954894[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4230235865906954894[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4230235865906954894[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4230235865906954894[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4230235865906954894[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4230235865906954894[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4230235865906954894[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4230235865906954894[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4230235865906954894[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4230235865906954894[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4230235865906954894[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4230235865906954894[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7285454058321316757) {
   out_7285454058321316757[0] = delta_x[0] + nom_x[0];
   out_7285454058321316757[1] = delta_x[1] + nom_x[1];
   out_7285454058321316757[2] = delta_x[2] + nom_x[2];
   out_7285454058321316757[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7285454058321316757[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7285454058321316757[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7285454058321316757[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7285454058321316757[7] = delta_x[6] + nom_x[7];
   out_7285454058321316757[8] = delta_x[7] + nom_x[8];
   out_7285454058321316757[9] = delta_x[8] + nom_x[9];
   out_7285454058321316757[10] = delta_x[9] + nom_x[10];
   out_7285454058321316757[11] = delta_x[10] + nom_x[11];
   out_7285454058321316757[12] = delta_x[11] + nom_x[12];
   out_7285454058321316757[13] = delta_x[12] + nom_x[13];
   out_7285454058321316757[14] = delta_x[13] + nom_x[14];
   out_7285454058321316757[15] = delta_x[14] + nom_x[15];
   out_7285454058321316757[16] = delta_x[15] + nom_x[16];
   out_7285454058321316757[17] = delta_x[16] + nom_x[17];
   out_7285454058321316757[18] = delta_x[17] + nom_x[18];
   out_7285454058321316757[19] = delta_x[18] + nom_x[19];
   out_7285454058321316757[20] = delta_x[19] + nom_x[20];
   out_7285454058321316757[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3027376436415471136) {
   out_3027376436415471136[0] = -nom_x[0] + true_x[0];
   out_3027376436415471136[1] = -nom_x[1] + true_x[1];
   out_3027376436415471136[2] = -nom_x[2] + true_x[2];
   out_3027376436415471136[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3027376436415471136[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3027376436415471136[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3027376436415471136[6] = -nom_x[7] + true_x[7];
   out_3027376436415471136[7] = -nom_x[8] + true_x[8];
   out_3027376436415471136[8] = -nom_x[9] + true_x[9];
   out_3027376436415471136[9] = -nom_x[10] + true_x[10];
   out_3027376436415471136[10] = -nom_x[11] + true_x[11];
   out_3027376436415471136[11] = -nom_x[12] + true_x[12];
   out_3027376436415471136[12] = -nom_x[13] + true_x[13];
   out_3027376436415471136[13] = -nom_x[14] + true_x[14];
   out_3027376436415471136[14] = -nom_x[15] + true_x[15];
   out_3027376436415471136[15] = -nom_x[16] + true_x[16];
   out_3027376436415471136[16] = -nom_x[17] + true_x[17];
   out_3027376436415471136[17] = -nom_x[18] + true_x[18];
   out_3027376436415471136[18] = -nom_x[19] + true_x[19];
   out_3027376436415471136[19] = -nom_x[20] + true_x[20];
   out_3027376436415471136[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2182370620574098344) {
   out_2182370620574098344[0] = 1.0;
   out_2182370620574098344[1] = 0;
   out_2182370620574098344[2] = 0;
   out_2182370620574098344[3] = 0;
   out_2182370620574098344[4] = 0;
   out_2182370620574098344[5] = 0;
   out_2182370620574098344[6] = 0;
   out_2182370620574098344[7] = 0;
   out_2182370620574098344[8] = 0;
   out_2182370620574098344[9] = 0;
   out_2182370620574098344[10] = 0;
   out_2182370620574098344[11] = 0;
   out_2182370620574098344[12] = 0;
   out_2182370620574098344[13] = 0;
   out_2182370620574098344[14] = 0;
   out_2182370620574098344[15] = 0;
   out_2182370620574098344[16] = 0;
   out_2182370620574098344[17] = 0;
   out_2182370620574098344[18] = 0;
   out_2182370620574098344[19] = 0;
   out_2182370620574098344[20] = 0;
   out_2182370620574098344[21] = 0;
   out_2182370620574098344[22] = 1.0;
   out_2182370620574098344[23] = 0;
   out_2182370620574098344[24] = 0;
   out_2182370620574098344[25] = 0;
   out_2182370620574098344[26] = 0;
   out_2182370620574098344[27] = 0;
   out_2182370620574098344[28] = 0;
   out_2182370620574098344[29] = 0;
   out_2182370620574098344[30] = 0;
   out_2182370620574098344[31] = 0;
   out_2182370620574098344[32] = 0;
   out_2182370620574098344[33] = 0;
   out_2182370620574098344[34] = 0;
   out_2182370620574098344[35] = 0;
   out_2182370620574098344[36] = 0;
   out_2182370620574098344[37] = 0;
   out_2182370620574098344[38] = 0;
   out_2182370620574098344[39] = 0;
   out_2182370620574098344[40] = 0;
   out_2182370620574098344[41] = 0;
   out_2182370620574098344[42] = 0;
   out_2182370620574098344[43] = 0;
   out_2182370620574098344[44] = 1.0;
   out_2182370620574098344[45] = 0;
   out_2182370620574098344[46] = 0;
   out_2182370620574098344[47] = 0;
   out_2182370620574098344[48] = 0;
   out_2182370620574098344[49] = 0;
   out_2182370620574098344[50] = 0;
   out_2182370620574098344[51] = 0;
   out_2182370620574098344[52] = 0;
   out_2182370620574098344[53] = 0;
   out_2182370620574098344[54] = 0;
   out_2182370620574098344[55] = 0;
   out_2182370620574098344[56] = 0;
   out_2182370620574098344[57] = 0;
   out_2182370620574098344[58] = 0;
   out_2182370620574098344[59] = 0;
   out_2182370620574098344[60] = 0;
   out_2182370620574098344[61] = 0;
   out_2182370620574098344[62] = 0;
   out_2182370620574098344[63] = 0;
   out_2182370620574098344[64] = 0;
   out_2182370620574098344[65] = 0;
   out_2182370620574098344[66] = -0.5*state[4];
   out_2182370620574098344[67] = -0.5*state[5];
   out_2182370620574098344[68] = -0.5*state[6];
   out_2182370620574098344[69] = 0;
   out_2182370620574098344[70] = 0;
   out_2182370620574098344[71] = 0;
   out_2182370620574098344[72] = 0;
   out_2182370620574098344[73] = 0;
   out_2182370620574098344[74] = 0;
   out_2182370620574098344[75] = 0;
   out_2182370620574098344[76] = 0;
   out_2182370620574098344[77] = 0;
   out_2182370620574098344[78] = 0;
   out_2182370620574098344[79] = 0;
   out_2182370620574098344[80] = 0;
   out_2182370620574098344[81] = 0;
   out_2182370620574098344[82] = 0;
   out_2182370620574098344[83] = 0;
   out_2182370620574098344[84] = 0;
   out_2182370620574098344[85] = 0;
   out_2182370620574098344[86] = 0;
   out_2182370620574098344[87] = 0.5*state[3];
   out_2182370620574098344[88] = 0.5*state[6];
   out_2182370620574098344[89] = -0.5*state[5];
   out_2182370620574098344[90] = 0;
   out_2182370620574098344[91] = 0;
   out_2182370620574098344[92] = 0;
   out_2182370620574098344[93] = 0;
   out_2182370620574098344[94] = 0;
   out_2182370620574098344[95] = 0;
   out_2182370620574098344[96] = 0;
   out_2182370620574098344[97] = 0;
   out_2182370620574098344[98] = 0;
   out_2182370620574098344[99] = 0;
   out_2182370620574098344[100] = 0;
   out_2182370620574098344[101] = 0;
   out_2182370620574098344[102] = 0;
   out_2182370620574098344[103] = 0;
   out_2182370620574098344[104] = 0;
   out_2182370620574098344[105] = 0;
   out_2182370620574098344[106] = 0;
   out_2182370620574098344[107] = 0;
   out_2182370620574098344[108] = -0.5*state[6];
   out_2182370620574098344[109] = 0.5*state[3];
   out_2182370620574098344[110] = 0.5*state[4];
   out_2182370620574098344[111] = 0;
   out_2182370620574098344[112] = 0;
   out_2182370620574098344[113] = 0;
   out_2182370620574098344[114] = 0;
   out_2182370620574098344[115] = 0;
   out_2182370620574098344[116] = 0;
   out_2182370620574098344[117] = 0;
   out_2182370620574098344[118] = 0;
   out_2182370620574098344[119] = 0;
   out_2182370620574098344[120] = 0;
   out_2182370620574098344[121] = 0;
   out_2182370620574098344[122] = 0;
   out_2182370620574098344[123] = 0;
   out_2182370620574098344[124] = 0;
   out_2182370620574098344[125] = 0;
   out_2182370620574098344[126] = 0;
   out_2182370620574098344[127] = 0;
   out_2182370620574098344[128] = 0;
   out_2182370620574098344[129] = 0.5*state[5];
   out_2182370620574098344[130] = -0.5*state[4];
   out_2182370620574098344[131] = 0.5*state[3];
   out_2182370620574098344[132] = 0;
   out_2182370620574098344[133] = 0;
   out_2182370620574098344[134] = 0;
   out_2182370620574098344[135] = 0;
   out_2182370620574098344[136] = 0;
   out_2182370620574098344[137] = 0;
   out_2182370620574098344[138] = 0;
   out_2182370620574098344[139] = 0;
   out_2182370620574098344[140] = 0;
   out_2182370620574098344[141] = 0;
   out_2182370620574098344[142] = 0;
   out_2182370620574098344[143] = 0;
   out_2182370620574098344[144] = 0;
   out_2182370620574098344[145] = 0;
   out_2182370620574098344[146] = 0;
   out_2182370620574098344[147] = 0;
   out_2182370620574098344[148] = 0;
   out_2182370620574098344[149] = 0;
   out_2182370620574098344[150] = 0;
   out_2182370620574098344[151] = 0;
   out_2182370620574098344[152] = 0;
   out_2182370620574098344[153] = 1.0;
   out_2182370620574098344[154] = 0;
   out_2182370620574098344[155] = 0;
   out_2182370620574098344[156] = 0;
   out_2182370620574098344[157] = 0;
   out_2182370620574098344[158] = 0;
   out_2182370620574098344[159] = 0;
   out_2182370620574098344[160] = 0;
   out_2182370620574098344[161] = 0;
   out_2182370620574098344[162] = 0;
   out_2182370620574098344[163] = 0;
   out_2182370620574098344[164] = 0;
   out_2182370620574098344[165] = 0;
   out_2182370620574098344[166] = 0;
   out_2182370620574098344[167] = 0;
   out_2182370620574098344[168] = 0;
   out_2182370620574098344[169] = 0;
   out_2182370620574098344[170] = 0;
   out_2182370620574098344[171] = 0;
   out_2182370620574098344[172] = 0;
   out_2182370620574098344[173] = 0;
   out_2182370620574098344[174] = 0;
   out_2182370620574098344[175] = 1.0;
   out_2182370620574098344[176] = 0;
   out_2182370620574098344[177] = 0;
   out_2182370620574098344[178] = 0;
   out_2182370620574098344[179] = 0;
   out_2182370620574098344[180] = 0;
   out_2182370620574098344[181] = 0;
   out_2182370620574098344[182] = 0;
   out_2182370620574098344[183] = 0;
   out_2182370620574098344[184] = 0;
   out_2182370620574098344[185] = 0;
   out_2182370620574098344[186] = 0;
   out_2182370620574098344[187] = 0;
   out_2182370620574098344[188] = 0;
   out_2182370620574098344[189] = 0;
   out_2182370620574098344[190] = 0;
   out_2182370620574098344[191] = 0;
   out_2182370620574098344[192] = 0;
   out_2182370620574098344[193] = 0;
   out_2182370620574098344[194] = 0;
   out_2182370620574098344[195] = 0;
   out_2182370620574098344[196] = 0;
   out_2182370620574098344[197] = 1.0;
   out_2182370620574098344[198] = 0;
   out_2182370620574098344[199] = 0;
   out_2182370620574098344[200] = 0;
   out_2182370620574098344[201] = 0;
   out_2182370620574098344[202] = 0;
   out_2182370620574098344[203] = 0;
   out_2182370620574098344[204] = 0;
   out_2182370620574098344[205] = 0;
   out_2182370620574098344[206] = 0;
   out_2182370620574098344[207] = 0;
   out_2182370620574098344[208] = 0;
   out_2182370620574098344[209] = 0;
   out_2182370620574098344[210] = 0;
   out_2182370620574098344[211] = 0;
   out_2182370620574098344[212] = 0;
   out_2182370620574098344[213] = 0;
   out_2182370620574098344[214] = 0;
   out_2182370620574098344[215] = 0;
   out_2182370620574098344[216] = 0;
   out_2182370620574098344[217] = 0;
   out_2182370620574098344[218] = 0;
   out_2182370620574098344[219] = 1.0;
   out_2182370620574098344[220] = 0;
   out_2182370620574098344[221] = 0;
   out_2182370620574098344[222] = 0;
   out_2182370620574098344[223] = 0;
   out_2182370620574098344[224] = 0;
   out_2182370620574098344[225] = 0;
   out_2182370620574098344[226] = 0;
   out_2182370620574098344[227] = 0;
   out_2182370620574098344[228] = 0;
   out_2182370620574098344[229] = 0;
   out_2182370620574098344[230] = 0;
   out_2182370620574098344[231] = 0;
   out_2182370620574098344[232] = 0;
   out_2182370620574098344[233] = 0;
   out_2182370620574098344[234] = 0;
   out_2182370620574098344[235] = 0;
   out_2182370620574098344[236] = 0;
   out_2182370620574098344[237] = 0;
   out_2182370620574098344[238] = 0;
   out_2182370620574098344[239] = 0;
   out_2182370620574098344[240] = 0;
   out_2182370620574098344[241] = 1.0;
   out_2182370620574098344[242] = 0;
   out_2182370620574098344[243] = 0;
   out_2182370620574098344[244] = 0;
   out_2182370620574098344[245] = 0;
   out_2182370620574098344[246] = 0;
   out_2182370620574098344[247] = 0;
   out_2182370620574098344[248] = 0;
   out_2182370620574098344[249] = 0;
   out_2182370620574098344[250] = 0;
   out_2182370620574098344[251] = 0;
   out_2182370620574098344[252] = 0;
   out_2182370620574098344[253] = 0;
   out_2182370620574098344[254] = 0;
   out_2182370620574098344[255] = 0;
   out_2182370620574098344[256] = 0;
   out_2182370620574098344[257] = 0;
   out_2182370620574098344[258] = 0;
   out_2182370620574098344[259] = 0;
   out_2182370620574098344[260] = 0;
   out_2182370620574098344[261] = 0;
   out_2182370620574098344[262] = 0;
   out_2182370620574098344[263] = 1.0;
   out_2182370620574098344[264] = 0;
   out_2182370620574098344[265] = 0;
   out_2182370620574098344[266] = 0;
   out_2182370620574098344[267] = 0;
   out_2182370620574098344[268] = 0;
   out_2182370620574098344[269] = 0;
   out_2182370620574098344[270] = 0;
   out_2182370620574098344[271] = 0;
   out_2182370620574098344[272] = 0;
   out_2182370620574098344[273] = 0;
   out_2182370620574098344[274] = 0;
   out_2182370620574098344[275] = 0;
   out_2182370620574098344[276] = 0;
   out_2182370620574098344[277] = 0;
   out_2182370620574098344[278] = 0;
   out_2182370620574098344[279] = 0;
   out_2182370620574098344[280] = 0;
   out_2182370620574098344[281] = 0;
   out_2182370620574098344[282] = 0;
   out_2182370620574098344[283] = 0;
   out_2182370620574098344[284] = 0;
   out_2182370620574098344[285] = 1.0;
   out_2182370620574098344[286] = 0;
   out_2182370620574098344[287] = 0;
   out_2182370620574098344[288] = 0;
   out_2182370620574098344[289] = 0;
   out_2182370620574098344[290] = 0;
   out_2182370620574098344[291] = 0;
   out_2182370620574098344[292] = 0;
   out_2182370620574098344[293] = 0;
   out_2182370620574098344[294] = 0;
   out_2182370620574098344[295] = 0;
   out_2182370620574098344[296] = 0;
   out_2182370620574098344[297] = 0;
   out_2182370620574098344[298] = 0;
   out_2182370620574098344[299] = 0;
   out_2182370620574098344[300] = 0;
   out_2182370620574098344[301] = 0;
   out_2182370620574098344[302] = 0;
   out_2182370620574098344[303] = 0;
   out_2182370620574098344[304] = 0;
   out_2182370620574098344[305] = 0;
   out_2182370620574098344[306] = 0;
   out_2182370620574098344[307] = 1.0;
   out_2182370620574098344[308] = 0;
   out_2182370620574098344[309] = 0;
   out_2182370620574098344[310] = 0;
   out_2182370620574098344[311] = 0;
   out_2182370620574098344[312] = 0;
   out_2182370620574098344[313] = 0;
   out_2182370620574098344[314] = 0;
   out_2182370620574098344[315] = 0;
   out_2182370620574098344[316] = 0;
   out_2182370620574098344[317] = 0;
   out_2182370620574098344[318] = 0;
   out_2182370620574098344[319] = 0;
   out_2182370620574098344[320] = 0;
   out_2182370620574098344[321] = 0;
   out_2182370620574098344[322] = 0;
   out_2182370620574098344[323] = 0;
   out_2182370620574098344[324] = 0;
   out_2182370620574098344[325] = 0;
   out_2182370620574098344[326] = 0;
   out_2182370620574098344[327] = 0;
   out_2182370620574098344[328] = 0;
   out_2182370620574098344[329] = 1.0;
   out_2182370620574098344[330] = 0;
   out_2182370620574098344[331] = 0;
   out_2182370620574098344[332] = 0;
   out_2182370620574098344[333] = 0;
   out_2182370620574098344[334] = 0;
   out_2182370620574098344[335] = 0;
   out_2182370620574098344[336] = 0;
   out_2182370620574098344[337] = 0;
   out_2182370620574098344[338] = 0;
   out_2182370620574098344[339] = 0;
   out_2182370620574098344[340] = 0;
   out_2182370620574098344[341] = 0;
   out_2182370620574098344[342] = 0;
   out_2182370620574098344[343] = 0;
   out_2182370620574098344[344] = 0;
   out_2182370620574098344[345] = 0;
   out_2182370620574098344[346] = 0;
   out_2182370620574098344[347] = 0;
   out_2182370620574098344[348] = 0;
   out_2182370620574098344[349] = 0;
   out_2182370620574098344[350] = 0;
   out_2182370620574098344[351] = 1.0;
   out_2182370620574098344[352] = 0;
   out_2182370620574098344[353] = 0;
   out_2182370620574098344[354] = 0;
   out_2182370620574098344[355] = 0;
   out_2182370620574098344[356] = 0;
   out_2182370620574098344[357] = 0;
   out_2182370620574098344[358] = 0;
   out_2182370620574098344[359] = 0;
   out_2182370620574098344[360] = 0;
   out_2182370620574098344[361] = 0;
   out_2182370620574098344[362] = 0;
   out_2182370620574098344[363] = 0;
   out_2182370620574098344[364] = 0;
   out_2182370620574098344[365] = 0;
   out_2182370620574098344[366] = 0;
   out_2182370620574098344[367] = 0;
   out_2182370620574098344[368] = 0;
   out_2182370620574098344[369] = 0;
   out_2182370620574098344[370] = 0;
   out_2182370620574098344[371] = 0;
   out_2182370620574098344[372] = 0;
   out_2182370620574098344[373] = 1.0;
   out_2182370620574098344[374] = 0;
   out_2182370620574098344[375] = 0;
   out_2182370620574098344[376] = 0;
   out_2182370620574098344[377] = 0;
   out_2182370620574098344[378] = 0;
   out_2182370620574098344[379] = 0;
   out_2182370620574098344[380] = 0;
   out_2182370620574098344[381] = 0;
   out_2182370620574098344[382] = 0;
   out_2182370620574098344[383] = 0;
   out_2182370620574098344[384] = 0;
   out_2182370620574098344[385] = 0;
   out_2182370620574098344[386] = 0;
   out_2182370620574098344[387] = 0;
   out_2182370620574098344[388] = 0;
   out_2182370620574098344[389] = 0;
   out_2182370620574098344[390] = 0;
   out_2182370620574098344[391] = 0;
   out_2182370620574098344[392] = 0;
   out_2182370620574098344[393] = 0;
   out_2182370620574098344[394] = 0;
   out_2182370620574098344[395] = 1.0;
   out_2182370620574098344[396] = 0;
   out_2182370620574098344[397] = 0;
   out_2182370620574098344[398] = 0;
   out_2182370620574098344[399] = 0;
   out_2182370620574098344[400] = 0;
   out_2182370620574098344[401] = 0;
   out_2182370620574098344[402] = 0;
   out_2182370620574098344[403] = 0;
   out_2182370620574098344[404] = 0;
   out_2182370620574098344[405] = 0;
   out_2182370620574098344[406] = 0;
   out_2182370620574098344[407] = 0;
   out_2182370620574098344[408] = 0;
   out_2182370620574098344[409] = 0;
   out_2182370620574098344[410] = 0;
   out_2182370620574098344[411] = 0;
   out_2182370620574098344[412] = 0;
   out_2182370620574098344[413] = 0;
   out_2182370620574098344[414] = 0;
   out_2182370620574098344[415] = 0;
   out_2182370620574098344[416] = 0;
   out_2182370620574098344[417] = 1.0;
   out_2182370620574098344[418] = 0;
   out_2182370620574098344[419] = 0;
   out_2182370620574098344[420] = 0;
   out_2182370620574098344[421] = 0;
   out_2182370620574098344[422] = 0;
   out_2182370620574098344[423] = 0;
   out_2182370620574098344[424] = 0;
   out_2182370620574098344[425] = 0;
   out_2182370620574098344[426] = 0;
   out_2182370620574098344[427] = 0;
   out_2182370620574098344[428] = 0;
   out_2182370620574098344[429] = 0;
   out_2182370620574098344[430] = 0;
   out_2182370620574098344[431] = 0;
   out_2182370620574098344[432] = 0;
   out_2182370620574098344[433] = 0;
   out_2182370620574098344[434] = 0;
   out_2182370620574098344[435] = 0;
   out_2182370620574098344[436] = 0;
   out_2182370620574098344[437] = 0;
   out_2182370620574098344[438] = 0;
   out_2182370620574098344[439] = 1.0;
   out_2182370620574098344[440] = 0;
   out_2182370620574098344[441] = 0;
   out_2182370620574098344[442] = 0;
   out_2182370620574098344[443] = 0;
   out_2182370620574098344[444] = 0;
   out_2182370620574098344[445] = 0;
   out_2182370620574098344[446] = 0;
   out_2182370620574098344[447] = 0;
   out_2182370620574098344[448] = 0;
   out_2182370620574098344[449] = 0;
   out_2182370620574098344[450] = 0;
   out_2182370620574098344[451] = 0;
   out_2182370620574098344[452] = 0;
   out_2182370620574098344[453] = 0;
   out_2182370620574098344[454] = 0;
   out_2182370620574098344[455] = 0;
   out_2182370620574098344[456] = 0;
   out_2182370620574098344[457] = 0;
   out_2182370620574098344[458] = 0;
   out_2182370620574098344[459] = 0;
   out_2182370620574098344[460] = 0;
   out_2182370620574098344[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5392690204489221927) {
   out_5392690204489221927[0] = dt*state[7] + state[0];
   out_5392690204489221927[1] = dt*state[8] + state[1];
   out_5392690204489221927[2] = dt*state[9] + state[2];
   out_5392690204489221927[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5392690204489221927[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5392690204489221927[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5392690204489221927[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5392690204489221927[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5392690204489221927[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5392690204489221927[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5392690204489221927[10] = state[10];
   out_5392690204489221927[11] = state[11];
   out_5392690204489221927[12] = state[12];
   out_5392690204489221927[13] = state[13];
   out_5392690204489221927[14] = state[14];
   out_5392690204489221927[15] = state[15];
   out_5392690204489221927[16] = state[16];
   out_5392690204489221927[17] = state[17];
   out_5392690204489221927[18] = state[18];
   out_5392690204489221927[19] = state[19];
   out_5392690204489221927[20] = state[20];
   out_5392690204489221927[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4187189026783364532) {
   out_4187189026783364532[0] = 1;
   out_4187189026783364532[1] = 0;
   out_4187189026783364532[2] = 0;
   out_4187189026783364532[3] = 0;
   out_4187189026783364532[4] = 0;
   out_4187189026783364532[5] = 0;
   out_4187189026783364532[6] = dt;
   out_4187189026783364532[7] = 0;
   out_4187189026783364532[8] = 0;
   out_4187189026783364532[9] = 0;
   out_4187189026783364532[10] = 0;
   out_4187189026783364532[11] = 0;
   out_4187189026783364532[12] = 0;
   out_4187189026783364532[13] = 0;
   out_4187189026783364532[14] = 0;
   out_4187189026783364532[15] = 0;
   out_4187189026783364532[16] = 0;
   out_4187189026783364532[17] = 0;
   out_4187189026783364532[18] = 0;
   out_4187189026783364532[19] = 0;
   out_4187189026783364532[20] = 0;
   out_4187189026783364532[21] = 0;
   out_4187189026783364532[22] = 1;
   out_4187189026783364532[23] = 0;
   out_4187189026783364532[24] = 0;
   out_4187189026783364532[25] = 0;
   out_4187189026783364532[26] = 0;
   out_4187189026783364532[27] = 0;
   out_4187189026783364532[28] = dt;
   out_4187189026783364532[29] = 0;
   out_4187189026783364532[30] = 0;
   out_4187189026783364532[31] = 0;
   out_4187189026783364532[32] = 0;
   out_4187189026783364532[33] = 0;
   out_4187189026783364532[34] = 0;
   out_4187189026783364532[35] = 0;
   out_4187189026783364532[36] = 0;
   out_4187189026783364532[37] = 0;
   out_4187189026783364532[38] = 0;
   out_4187189026783364532[39] = 0;
   out_4187189026783364532[40] = 0;
   out_4187189026783364532[41] = 0;
   out_4187189026783364532[42] = 0;
   out_4187189026783364532[43] = 0;
   out_4187189026783364532[44] = 1;
   out_4187189026783364532[45] = 0;
   out_4187189026783364532[46] = 0;
   out_4187189026783364532[47] = 0;
   out_4187189026783364532[48] = 0;
   out_4187189026783364532[49] = 0;
   out_4187189026783364532[50] = dt;
   out_4187189026783364532[51] = 0;
   out_4187189026783364532[52] = 0;
   out_4187189026783364532[53] = 0;
   out_4187189026783364532[54] = 0;
   out_4187189026783364532[55] = 0;
   out_4187189026783364532[56] = 0;
   out_4187189026783364532[57] = 0;
   out_4187189026783364532[58] = 0;
   out_4187189026783364532[59] = 0;
   out_4187189026783364532[60] = 0;
   out_4187189026783364532[61] = 0;
   out_4187189026783364532[62] = 0;
   out_4187189026783364532[63] = 0;
   out_4187189026783364532[64] = 0;
   out_4187189026783364532[65] = 0;
   out_4187189026783364532[66] = 1;
   out_4187189026783364532[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4187189026783364532[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4187189026783364532[69] = 0;
   out_4187189026783364532[70] = 0;
   out_4187189026783364532[71] = 0;
   out_4187189026783364532[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4187189026783364532[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4187189026783364532[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4187189026783364532[75] = 0;
   out_4187189026783364532[76] = 0;
   out_4187189026783364532[77] = 0;
   out_4187189026783364532[78] = 0;
   out_4187189026783364532[79] = 0;
   out_4187189026783364532[80] = 0;
   out_4187189026783364532[81] = 0;
   out_4187189026783364532[82] = 0;
   out_4187189026783364532[83] = 0;
   out_4187189026783364532[84] = 0;
   out_4187189026783364532[85] = 0;
   out_4187189026783364532[86] = 0;
   out_4187189026783364532[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4187189026783364532[88] = 1;
   out_4187189026783364532[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4187189026783364532[90] = 0;
   out_4187189026783364532[91] = 0;
   out_4187189026783364532[92] = 0;
   out_4187189026783364532[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4187189026783364532[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4187189026783364532[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4187189026783364532[96] = 0;
   out_4187189026783364532[97] = 0;
   out_4187189026783364532[98] = 0;
   out_4187189026783364532[99] = 0;
   out_4187189026783364532[100] = 0;
   out_4187189026783364532[101] = 0;
   out_4187189026783364532[102] = 0;
   out_4187189026783364532[103] = 0;
   out_4187189026783364532[104] = 0;
   out_4187189026783364532[105] = 0;
   out_4187189026783364532[106] = 0;
   out_4187189026783364532[107] = 0;
   out_4187189026783364532[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4187189026783364532[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4187189026783364532[110] = 1;
   out_4187189026783364532[111] = 0;
   out_4187189026783364532[112] = 0;
   out_4187189026783364532[113] = 0;
   out_4187189026783364532[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4187189026783364532[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4187189026783364532[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4187189026783364532[117] = 0;
   out_4187189026783364532[118] = 0;
   out_4187189026783364532[119] = 0;
   out_4187189026783364532[120] = 0;
   out_4187189026783364532[121] = 0;
   out_4187189026783364532[122] = 0;
   out_4187189026783364532[123] = 0;
   out_4187189026783364532[124] = 0;
   out_4187189026783364532[125] = 0;
   out_4187189026783364532[126] = 0;
   out_4187189026783364532[127] = 0;
   out_4187189026783364532[128] = 0;
   out_4187189026783364532[129] = 0;
   out_4187189026783364532[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4187189026783364532[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4187189026783364532[132] = 1;
   out_4187189026783364532[133] = 0;
   out_4187189026783364532[134] = 0;
   out_4187189026783364532[135] = 0;
   out_4187189026783364532[136] = 0;
   out_4187189026783364532[137] = 0;
   out_4187189026783364532[138] = 0;
   out_4187189026783364532[139] = 0;
   out_4187189026783364532[140] = 0;
   out_4187189026783364532[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4187189026783364532[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4187189026783364532[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4187189026783364532[144] = 0;
   out_4187189026783364532[145] = 0;
   out_4187189026783364532[146] = 0;
   out_4187189026783364532[147] = 0;
   out_4187189026783364532[148] = 0;
   out_4187189026783364532[149] = 0;
   out_4187189026783364532[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4187189026783364532[151] = 0;
   out_4187189026783364532[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4187189026783364532[153] = 0;
   out_4187189026783364532[154] = 1;
   out_4187189026783364532[155] = 0;
   out_4187189026783364532[156] = 0;
   out_4187189026783364532[157] = 0;
   out_4187189026783364532[158] = 0;
   out_4187189026783364532[159] = 0;
   out_4187189026783364532[160] = 0;
   out_4187189026783364532[161] = 0;
   out_4187189026783364532[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4187189026783364532[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4187189026783364532[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4187189026783364532[165] = 0;
   out_4187189026783364532[166] = 0;
   out_4187189026783364532[167] = 0;
   out_4187189026783364532[168] = 0;
   out_4187189026783364532[169] = 0;
   out_4187189026783364532[170] = 0;
   out_4187189026783364532[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4187189026783364532[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4187189026783364532[173] = 0;
   out_4187189026783364532[174] = 0;
   out_4187189026783364532[175] = 0;
   out_4187189026783364532[176] = 1;
   out_4187189026783364532[177] = 0;
   out_4187189026783364532[178] = 0;
   out_4187189026783364532[179] = 0;
   out_4187189026783364532[180] = 0;
   out_4187189026783364532[181] = 0;
   out_4187189026783364532[182] = 0;
   out_4187189026783364532[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4187189026783364532[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4187189026783364532[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4187189026783364532[186] = 0;
   out_4187189026783364532[187] = 0;
   out_4187189026783364532[188] = 0;
   out_4187189026783364532[189] = 0;
   out_4187189026783364532[190] = 0;
   out_4187189026783364532[191] = 0;
   out_4187189026783364532[192] = 0;
   out_4187189026783364532[193] = 0;
   out_4187189026783364532[194] = 0;
   out_4187189026783364532[195] = 0;
   out_4187189026783364532[196] = 0;
   out_4187189026783364532[197] = 0;
   out_4187189026783364532[198] = 1;
   out_4187189026783364532[199] = 0;
   out_4187189026783364532[200] = 0;
   out_4187189026783364532[201] = 0;
   out_4187189026783364532[202] = 0;
   out_4187189026783364532[203] = 0;
   out_4187189026783364532[204] = 0;
   out_4187189026783364532[205] = 0;
   out_4187189026783364532[206] = 0;
   out_4187189026783364532[207] = 0;
   out_4187189026783364532[208] = 0;
   out_4187189026783364532[209] = 0;
   out_4187189026783364532[210] = 0;
   out_4187189026783364532[211] = 0;
   out_4187189026783364532[212] = 0;
   out_4187189026783364532[213] = 0;
   out_4187189026783364532[214] = 0;
   out_4187189026783364532[215] = 0;
   out_4187189026783364532[216] = 0;
   out_4187189026783364532[217] = 0;
   out_4187189026783364532[218] = 0;
   out_4187189026783364532[219] = 0;
   out_4187189026783364532[220] = 1;
   out_4187189026783364532[221] = 0;
   out_4187189026783364532[222] = 0;
   out_4187189026783364532[223] = 0;
   out_4187189026783364532[224] = 0;
   out_4187189026783364532[225] = 0;
   out_4187189026783364532[226] = 0;
   out_4187189026783364532[227] = 0;
   out_4187189026783364532[228] = 0;
   out_4187189026783364532[229] = 0;
   out_4187189026783364532[230] = 0;
   out_4187189026783364532[231] = 0;
   out_4187189026783364532[232] = 0;
   out_4187189026783364532[233] = 0;
   out_4187189026783364532[234] = 0;
   out_4187189026783364532[235] = 0;
   out_4187189026783364532[236] = 0;
   out_4187189026783364532[237] = 0;
   out_4187189026783364532[238] = 0;
   out_4187189026783364532[239] = 0;
   out_4187189026783364532[240] = 0;
   out_4187189026783364532[241] = 0;
   out_4187189026783364532[242] = 1;
   out_4187189026783364532[243] = 0;
   out_4187189026783364532[244] = 0;
   out_4187189026783364532[245] = 0;
   out_4187189026783364532[246] = 0;
   out_4187189026783364532[247] = 0;
   out_4187189026783364532[248] = 0;
   out_4187189026783364532[249] = 0;
   out_4187189026783364532[250] = 0;
   out_4187189026783364532[251] = 0;
   out_4187189026783364532[252] = 0;
   out_4187189026783364532[253] = 0;
   out_4187189026783364532[254] = 0;
   out_4187189026783364532[255] = 0;
   out_4187189026783364532[256] = 0;
   out_4187189026783364532[257] = 0;
   out_4187189026783364532[258] = 0;
   out_4187189026783364532[259] = 0;
   out_4187189026783364532[260] = 0;
   out_4187189026783364532[261] = 0;
   out_4187189026783364532[262] = 0;
   out_4187189026783364532[263] = 0;
   out_4187189026783364532[264] = 1;
   out_4187189026783364532[265] = 0;
   out_4187189026783364532[266] = 0;
   out_4187189026783364532[267] = 0;
   out_4187189026783364532[268] = 0;
   out_4187189026783364532[269] = 0;
   out_4187189026783364532[270] = 0;
   out_4187189026783364532[271] = 0;
   out_4187189026783364532[272] = 0;
   out_4187189026783364532[273] = 0;
   out_4187189026783364532[274] = 0;
   out_4187189026783364532[275] = 0;
   out_4187189026783364532[276] = 0;
   out_4187189026783364532[277] = 0;
   out_4187189026783364532[278] = 0;
   out_4187189026783364532[279] = 0;
   out_4187189026783364532[280] = 0;
   out_4187189026783364532[281] = 0;
   out_4187189026783364532[282] = 0;
   out_4187189026783364532[283] = 0;
   out_4187189026783364532[284] = 0;
   out_4187189026783364532[285] = 0;
   out_4187189026783364532[286] = 1;
   out_4187189026783364532[287] = 0;
   out_4187189026783364532[288] = 0;
   out_4187189026783364532[289] = 0;
   out_4187189026783364532[290] = 0;
   out_4187189026783364532[291] = 0;
   out_4187189026783364532[292] = 0;
   out_4187189026783364532[293] = 0;
   out_4187189026783364532[294] = 0;
   out_4187189026783364532[295] = 0;
   out_4187189026783364532[296] = 0;
   out_4187189026783364532[297] = 0;
   out_4187189026783364532[298] = 0;
   out_4187189026783364532[299] = 0;
   out_4187189026783364532[300] = 0;
   out_4187189026783364532[301] = 0;
   out_4187189026783364532[302] = 0;
   out_4187189026783364532[303] = 0;
   out_4187189026783364532[304] = 0;
   out_4187189026783364532[305] = 0;
   out_4187189026783364532[306] = 0;
   out_4187189026783364532[307] = 0;
   out_4187189026783364532[308] = 1;
   out_4187189026783364532[309] = 0;
   out_4187189026783364532[310] = 0;
   out_4187189026783364532[311] = 0;
   out_4187189026783364532[312] = 0;
   out_4187189026783364532[313] = 0;
   out_4187189026783364532[314] = 0;
   out_4187189026783364532[315] = 0;
   out_4187189026783364532[316] = 0;
   out_4187189026783364532[317] = 0;
   out_4187189026783364532[318] = 0;
   out_4187189026783364532[319] = 0;
   out_4187189026783364532[320] = 0;
   out_4187189026783364532[321] = 0;
   out_4187189026783364532[322] = 0;
   out_4187189026783364532[323] = 0;
   out_4187189026783364532[324] = 0;
   out_4187189026783364532[325] = 0;
   out_4187189026783364532[326] = 0;
   out_4187189026783364532[327] = 0;
   out_4187189026783364532[328] = 0;
   out_4187189026783364532[329] = 0;
   out_4187189026783364532[330] = 1;
   out_4187189026783364532[331] = 0;
   out_4187189026783364532[332] = 0;
   out_4187189026783364532[333] = 0;
   out_4187189026783364532[334] = 0;
   out_4187189026783364532[335] = 0;
   out_4187189026783364532[336] = 0;
   out_4187189026783364532[337] = 0;
   out_4187189026783364532[338] = 0;
   out_4187189026783364532[339] = 0;
   out_4187189026783364532[340] = 0;
   out_4187189026783364532[341] = 0;
   out_4187189026783364532[342] = 0;
   out_4187189026783364532[343] = 0;
   out_4187189026783364532[344] = 0;
   out_4187189026783364532[345] = 0;
   out_4187189026783364532[346] = 0;
   out_4187189026783364532[347] = 0;
   out_4187189026783364532[348] = 0;
   out_4187189026783364532[349] = 0;
   out_4187189026783364532[350] = 0;
   out_4187189026783364532[351] = 0;
   out_4187189026783364532[352] = 1;
   out_4187189026783364532[353] = 0;
   out_4187189026783364532[354] = 0;
   out_4187189026783364532[355] = 0;
   out_4187189026783364532[356] = 0;
   out_4187189026783364532[357] = 0;
   out_4187189026783364532[358] = 0;
   out_4187189026783364532[359] = 0;
   out_4187189026783364532[360] = 0;
   out_4187189026783364532[361] = 0;
   out_4187189026783364532[362] = 0;
   out_4187189026783364532[363] = 0;
   out_4187189026783364532[364] = 0;
   out_4187189026783364532[365] = 0;
   out_4187189026783364532[366] = 0;
   out_4187189026783364532[367] = 0;
   out_4187189026783364532[368] = 0;
   out_4187189026783364532[369] = 0;
   out_4187189026783364532[370] = 0;
   out_4187189026783364532[371] = 0;
   out_4187189026783364532[372] = 0;
   out_4187189026783364532[373] = 0;
   out_4187189026783364532[374] = 1;
   out_4187189026783364532[375] = 0;
   out_4187189026783364532[376] = 0;
   out_4187189026783364532[377] = 0;
   out_4187189026783364532[378] = 0;
   out_4187189026783364532[379] = 0;
   out_4187189026783364532[380] = 0;
   out_4187189026783364532[381] = 0;
   out_4187189026783364532[382] = 0;
   out_4187189026783364532[383] = 0;
   out_4187189026783364532[384] = 0;
   out_4187189026783364532[385] = 0;
   out_4187189026783364532[386] = 0;
   out_4187189026783364532[387] = 0;
   out_4187189026783364532[388] = 0;
   out_4187189026783364532[389] = 0;
   out_4187189026783364532[390] = 0;
   out_4187189026783364532[391] = 0;
   out_4187189026783364532[392] = 0;
   out_4187189026783364532[393] = 0;
   out_4187189026783364532[394] = 0;
   out_4187189026783364532[395] = 0;
   out_4187189026783364532[396] = 1;
   out_4187189026783364532[397] = 0;
   out_4187189026783364532[398] = 0;
   out_4187189026783364532[399] = 0;
   out_4187189026783364532[400] = 0;
   out_4187189026783364532[401] = 0;
   out_4187189026783364532[402] = 0;
   out_4187189026783364532[403] = 0;
   out_4187189026783364532[404] = 0;
   out_4187189026783364532[405] = 0;
   out_4187189026783364532[406] = 0;
   out_4187189026783364532[407] = 0;
   out_4187189026783364532[408] = 0;
   out_4187189026783364532[409] = 0;
   out_4187189026783364532[410] = 0;
   out_4187189026783364532[411] = 0;
   out_4187189026783364532[412] = 0;
   out_4187189026783364532[413] = 0;
   out_4187189026783364532[414] = 0;
   out_4187189026783364532[415] = 0;
   out_4187189026783364532[416] = 0;
   out_4187189026783364532[417] = 0;
   out_4187189026783364532[418] = 1;
   out_4187189026783364532[419] = 0;
   out_4187189026783364532[420] = 0;
   out_4187189026783364532[421] = 0;
   out_4187189026783364532[422] = 0;
   out_4187189026783364532[423] = 0;
   out_4187189026783364532[424] = 0;
   out_4187189026783364532[425] = 0;
   out_4187189026783364532[426] = 0;
   out_4187189026783364532[427] = 0;
   out_4187189026783364532[428] = 0;
   out_4187189026783364532[429] = 0;
   out_4187189026783364532[430] = 0;
   out_4187189026783364532[431] = 0;
   out_4187189026783364532[432] = 0;
   out_4187189026783364532[433] = 0;
   out_4187189026783364532[434] = 0;
   out_4187189026783364532[435] = 0;
   out_4187189026783364532[436] = 0;
   out_4187189026783364532[437] = 0;
   out_4187189026783364532[438] = 0;
   out_4187189026783364532[439] = 0;
   out_4187189026783364532[440] = 1;
}
void h_4(double *state, double *unused, double *out_7646675726508551857) {
   out_7646675726508551857[0] = state[10] + state[13];
   out_7646675726508551857[1] = state[11] + state[14];
   out_7646675726508551857[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1754981452174722276) {
   out_1754981452174722276[0] = 0;
   out_1754981452174722276[1] = 0;
   out_1754981452174722276[2] = 0;
   out_1754981452174722276[3] = 0;
   out_1754981452174722276[4] = 0;
   out_1754981452174722276[5] = 0;
   out_1754981452174722276[6] = 0;
   out_1754981452174722276[7] = 0;
   out_1754981452174722276[8] = 0;
   out_1754981452174722276[9] = 0;
   out_1754981452174722276[10] = 1;
   out_1754981452174722276[11] = 0;
   out_1754981452174722276[12] = 0;
   out_1754981452174722276[13] = 1;
   out_1754981452174722276[14] = 0;
   out_1754981452174722276[15] = 0;
   out_1754981452174722276[16] = 0;
   out_1754981452174722276[17] = 0;
   out_1754981452174722276[18] = 0;
   out_1754981452174722276[19] = 0;
   out_1754981452174722276[20] = 0;
   out_1754981452174722276[21] = 0;
   out_1754981452174722276[22] = 0;
   out_1754981452174722276[23] = 0;
   out_1754981452174722276[24] = 0;
   out_1754981452174722276[25] = 0;
   out_1754981452174722276[26] = 0;
   out_1754981452174722276[27] = 0;
   out_1754981452174722276[28] = 0;
   out_1754981452174722276[29] = 0;
   out_1754981452174722276[30] = 0;
   out_1754981452174722276[31] = 0;
   out_1754981452174722276[32] = 0;
   out_1754981452174722276[33] = 1;
   out_1754981452174722276[34] = 0;
   out_1754981452174722276[35] = 0;
   out_1754981452174722276[36] = 1;
   out_1754981452174722276[37] = 0;
   out_1754981452174722276[38] = 0;
   out_1754981452174722276[39] = 0;
   out_1754981452174722276[40] = 0;
   out_1754981452174722276[41] = 0;
   out_1754981452174722276[42] = 0;
   out_1754981452174722276[43] = 0;
   out_1754981452174722276[44] = 0;
   out_1754981452174722276[45] = 0;
   out_1754981452174722276[46] = 0;
   out_1754981452174722276[47] = 0;
   out_1754981452174722276[48] = 0;
   out_1754981452174722276[49] = 0;
   out_1754981452174722276[50] = 0;
   out_1754981452174722276[51] = 0;
   out_1754981452174722276[52] = 0;
   out_1754981452174722276[53] = 0;
   out_1754981452174722276[54] = 0;
   out_1754981452174722276[55] = 0;
   out_1754981452174722276[56] = 1;
   out_1754981452174722276[57] = 0;
   out_1754981452174722276[58] = 0;
   out_1754981452174722276[59] = 1;
   out_1754981452174722276[60] = 0;
   out_1754981452174722276[61] = 0;
   out_1754981452174722276[62] = 0;
   out_1754981452174722276[63] = 0;
   out_1754981452174722276[64] = 0;
   out_1754981452174722276[65] = 0;
}
void h_9(double *state, double *unused, double *out_2762814744364720524) {
   out_2762814744364720524[0] = state[10];
   out_2762814744364720524[1] = state[11];
   out_2762814744364720524[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5532237483089725194) {
   out_5532237483089725194[0] = 0;
   out_5532237483089725194[1] = 0;
   out_5532237483089725194[2] = 0;
   out_5532237483089725194[3] = 0;
   out_5532237483089725194[4] = 0;
   out_5532237483089725194[5] = 0;
   out_5532237483089725194[6] = 0;
   out_5532237483089725194[7] = 0;
   out_5532237483089725194[8] = 0;
   out_5532237483089725194[9] = 0;
   out_5532237483089725194[10] = 1;
   out_5532237483089725194[11] = 0;
   out_5532237483089725194[12] = 0;
   out_5532237483089725194[13] = 0;
   out_5532237483089725194[14] = 0;
   out_5532237483089725194[15] = 0;
   out_5532237483089725194[16] = 0;
   out_5532237483089725194[17] = 0;
   out_5532237483089725194[18] = 0;
   out_5532237483089725194[19] = 0;
   out_5532237483089725194[20] = 0;
   out_5532237483089725194[21] = 0;
   out_5532237483089725194[22] = 0;
   out_5532237483089725194[23] = 0;
   out_5532237483089725194[24] = 0;
   out_5532237483089725194[25] = 0;
   out_5532237483089725194[26] = 0;
   out_5532237483089725194[27] = 0;
   out_5532237483089725194[28] = 0;
   out_5532237483089725194[29] = 0;
   out_5532237483089725194[30] = 0;
   out_5532237483089725194[31] = 0;
   out_5532237483089725194[32] = 0;
   out_5532237483089725194[33] = 1;
   out_5532237483089725194[34] = 0;
   out_5532237483089725194[35] = 0;
   out_5532237483089725194[36] = 0;
   out_5532237483089725194[37] = 0;
   out_5532237483089725194[38] = 0;
   out_5532237483089725194[39] = 0;
   out_5532237483089725194[40] = 0;
   out_5532237483089725194[41] = 0;
   out_5532237483089725194[42] = 0;
   out_5532237483089725194[43] = 0;
   out_5532237483089725194[44] = 0;
   out_5532237483089725194[45] = 0;
   out_5532237483089725194[46] = 0;
   out_5532237483089725194[47] = 0;
   out_5532237483089725194[48] = 0;
   out_5532237483089725194[49] = 0;
   out_5532237483089725194[50] = 0;
   out_5532237483089725194[51] = 0;
   out_5532237483089725194[52] = 0;
   out_5532237483089725194[53] = 0;
   out_5532237483089725194[54] = 0;
   out_5532237483089725194[55] = 0;
   out_5532237483089725194[56] = 1;
   out_5532237483089725194[57] = 0;
   out_5532237483089725194[58] = 0;
   out_5532237483089725194[59] = 0;
   out_5532237483089725194[60] = 0;
   out_5532237483089725194[61] = 0;
   out_5532237483089725194[62] = 0;
   out_5532237483089725194[63] = 0;
   out_5532237483089725194[64] = 0;
   out_5532237483089725194[65] = 0;
}
void h_10(double *state, double *unused, double *out_6463768574348619745) {
   out_6463768574348619745[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6463768574348619745[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6463768574348619745[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7009897717026957061) {
   out_7009897717026957061[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7009897717026957061[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7009897717026957061[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7009897717026957061[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7009897717026957061[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7009897717026957061[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7009897717026957061[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7009897717026957061[7] = 0;
   out_7009897717026957061[8] = 0;
   out_7009897717026957061[9] = 0;
   out_7009897717026957061[10] = 0;
   out_7009897717026957061[11] = 0;
   out_7009897717026957061[12] = 0;
   out_7009897717026957061[13] = 0;
   out_7009897717026957061[14] = 0;
   out_7009897717026957061[15] = 0;
   out_7009897717026957061[16] = 1;
   out_7009897717026957061[17] = 0;
   out_7009897717026957061[18] = 0;
   out_7009897717026957061[19] = 1;
   out_7009897717026957061[20] = 0;
   out_7009897717026957061[21] = 0;
   out_7009897717026957061[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7009897717026957061[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7009897717026957061[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7009897717026957061[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7009897717026957061[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7009897717026957061[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7009897717026957061[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7009897717026957061[29] = 0;
   out_7009897717026957061[30] = 0;
   out_7009897717026957061[31] = 0;
   out_7009897717026957061[32] = 0;
   out_7009897717026957061[33] = 0;
   out_7009897717026957061[34] = 0;
   out_7009897717026957061[35] = 0;
   out_7009897717026957061[36] = 0;
   out_7009897717026957061[37] = 0;
   out_7009897717026957061[38] = 0;
   out_7009897717026957061[39] = 1;
   out_7009897717026957061[40] = 0;
   out_7009897717026957061[41] = 0;
   out_7009897717026957061[42] = 1;
   out_7009897717026957061[43] = 0;
   out_7009897717026957061[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7009897717026957061[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7009897717026957061[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7009897717026957061[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7009897717026957061[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7009897717026957061[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7009897717026957061[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7009897717026957061[51] = 0;
   out_7009897717026957061[52] = 0;
   out_7009897717026957061[53] = 0;
   out_7009897717026957061[54] = 0;
   out_7009897717026957061[55] = 0;
   out_7009897717026957061[56] = 0;
   out_7009897717026957061[57] = 0;
   out_7009897717026957061[58] = 0;
   out_7009897717026957061[59] = 0;
   out_7009897717026957061[60] = 0;
   out_7009897717026957061[61] = 0;
   out_7009897717026957061[62] = 1;
   out_7009897717026957061[63] = 0;
   out_7009897717026957061[64] = 0;
   out_7009897717026957061[65] = 1;
}
void h_12(double *state, double *unused, double *out_7053766938194549604) {
   out_7053766938194549604[0] = state[0];
   out_7053766938194549604[1] = state[1];
   out_7053766938194549604[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8136239829217455272) {
   out_8136239829217455272[0] = 1;
   out_8136239829217455272[1] = 0;
   out_8136239829217455272[2] = 0;
   out_8136239829217455272[3] = 0;
   out_8136239829217455272[4] = 0;
   out_8136239829217455272[5] = 0;
   out_8136239829217455272[6] = 0;
   out_8136239829217455272[7] = 0;
   out_8136239829217455272[8] = 0;
   out_8136239829217455272[9] = 0;
   out_8136239829217455272[10] = 0;
   out_8136239829217455272[11] = 0;
   out_8136239829217455272[12] = 0;
   out_8136239829217455272[13] = 0;
   out_8136239829217455272[14] = 0;
   out_8136239829217455272[15] = 0;
   out_8136239829217455272[16] = 0;
   out_8136239829217455272[17] = 0;
   out_8136239829217455272[18] = 0;
   out_8136239829217455272[19] = 0;
   out_8136239829217455272[20] = 0;
   out_8136239829217455272[21] = 0;
   out_8136239829217455272[22] = 0;
   out_8136239829217455272[23] = 1;
   out_8136239829217455272[24] = 0;
   out_8136239829217455272[25] = 0;
   out_8136239829217455272[26] = 0;
   out_8136239829217455272[27] = 0;
   out_8136239829217455272[28] = 0;
   out_8136239829217455272[29] = 0;
   out_8136239829217455272[30] = 0;
   out_8136239829217455272[31] = 0;
   out_8136239829217455272[32] = 0;
   out_8136239829217455272[33] = 0;
   out_8136239829217455272[34] = 0;
   out_8136239829217455272[35] = 0;
   out_8136239829217455272[36] = 0;
   out_8136239829217455272[37] = 0;
   out_8136239829217455272[38] = 0;
   out_8136239829217455272[39] = 0;
   out_8136239829217455272[40] = 0;
   out_8136239829217455272[41] = 0;
   out_8136239829217455272[42] = 0;
   out_8136239829217455272[43] = 0;
   out_8136239829217455272[44] = 0;
   out_8136239829217455272[45] = 0;
   out_8136239829217455272[46] = 1;
   out_8136239829217455272[47] = 0;
   out_8136239829217455272[48] = 0;
   out_8136239829217455272[49] = 0;
   out_8136239829217455272[50] = 0;
   out_8136239829217455272[51] = 0;
   out_8136239829217455272[52] = 0;
   out_8136239829217455272[53] = 0;
   out_8136239829217455272[54] = 0;
   out_8136239829217455272[55] = 0;
   out_8136239829217455272[56] = 0;
   out_8136239829217455272[57] = 0;
   out_8136239829217455272[58] = 0;
   out_8136239829217455272[59] = 0;
   out_8136239829217455272[60] = 0;
   out_8136239829217455272[61] = 0;
   out_8136239829217455272[62] = 0;
   out_8136239829217455272[63] = 0;
   out_8136239829217455272[64] = 0;
   out_8136239829217455272[65] = 0;
}
void h_35(double *state, double *unused, double *out_2211334445259474650) {
   out_2211334445259474650[0] = state[7];
   out_2211334445259474650[1] = state[8];
   out_2211334445259474650[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1611680605197885100) {
   out_1611680605197885100[0] = 0;
   out_1611680605197885100[1] = 0;
   out_1611680605197885100[2] = 0;
   out_1611680605197885100[3] = 0;
   out_1611680605197885100[4] = 0;
   out_1611680605197885100[5] = 0;
   out_1611680605197885100[6] = 0;
   out_1611680605197885100[7] = 1;
   out_1611680605197885100[8] = 0;
   out_1611680605197885100[9] = 0;
   out_1611680605197885100[10] = 0;
   out_1611680605197885100[11] = 0;
   out_1611680605197885100[12] = 0;
   out_1611680605197885100[13] = 0;
   out_1611680605197885100[14] = 0;
   out_1611680605197885100[15] = 0;
   out_1611680605197885100[16] = 0;
   out_1611680605197885100[17] = 0;
   out_1611680605197885100[18] = 0;
   out_1611680605197885100[19] = 0;
   out_1611680605197885100[20] = 0;
   out_1611680605197885100[21] = 0;
   out_1611680605197885100[22] = 0;
   out_1611680605197885100[23] = 0;
   out_1611680605197885100[24] = 0;
   out_1611680605197885100[25] = 0;
   out_1611680605197885100[26] = 0;
   out_1611680605197885100[27] = 0;
   out_1611680605197885100[28] = 0;
   out_1611680605197885100[29] = 0;
   out_1611680605197885100[30] = 1;
   out_1611680605197885100[31] = 0;
   out_1611680605197885100[32] = 0;
   out_1611680605197885100[33] = 0;
   out_1611680605197885100[34] = 0;
   out_1611680605197885100[35] = 0;
   out_1611680605197885100[36] = 0;
   out_1611680605197885100[37] = 0;
   out_1611680605197885100[38] = 0;
   out_1611680605197885100[39] = 0;
   out_1611680605197885100[40] = 0;
   out_1611680605197885100[41] = 0;
   out_1611680605197885100[42] = 0;
   out_1611680605197885100[43] = 0;
   out_1611680605197885100[44] = 0;
   out_1611680605197885100[45] = 0;
   out_1611680605197885100[46] = 0;
   out_1611680605197885100[47] = 0;
   out_1611680605197885100[48] = 0;
   out_1611680605197885100[49] = 0;
   out_1611680605197885100[50] = 0;
   out_1611680605197885100[51] = 0;
   out_1611680605197885100[52] = 0;
   out_1611680605197885100[53] = 1;
   out_1611680605197885100[54] = 0;
   out_1611680605197885100[55] = 0;
   out_1611680605197885100[56] = 0;
   out_1611680605197885100[57] = 0;
   out_1611680605197885100[58] = 0;
   out_1611680605197885100[59] = 0;
   out_1611680605197885100[60] = 0;
   out_1611680605197885100[61] = 0;
   out_1611680605197885100[62] = 0;
   out_1611680605197885100[63] = 0;
   out_1611680605197885100[64] = 0;
   out_1611680605197885100[65] = 0;
}
void h_32(double *state, double *unused, double *out_6811700224214412955) {
   out_6811700224214412955[0] = state[3];
   out_6811700224214412955[1] = state[4];
   out_6811700224214412955[2] = state[5];
   out_6811700224214412955[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5697416293294808200) {
   out_5697416293294808200[0] = 0;
   out_5697416293294808200[1] = 0;
   out_5697416293294808200[2] = 0;
   out_5697416293294808200[3] = 1;
   out_5697416293294808200[4] = 0;
   out_5697416293294808200[5] = 0;
   out_5697416293294808200[6] = 0;
   out_5697416293294808200[7] = 0;
   out_5697416293294808200[8] = 0;
   out_5697416293294808200[9] = 0;
   out_5697416293294808200[10] = 0;
   out_5697416293294808200[11] = 0;
   out_5697416293294808200[12] = 0;
   out_5697416293294808200[13] = 0;
   out_5697416293294808200[14] = 0;
   out_5697416293294808200[15] = 0;
   out_5697416293294808200[16] = 0;
   out_5697416293294808200[17] = 0;
   out_5697416293294808200[18] = 0;
   out_5697416293294808200[19] = 0;
   out_5697416293294808200[20] = 0;
   out_5697416293294808200[21] = 0;
   out_5697416293294808200[22] = 0;
   out_5697416293294808200[23] = 0;
   out_5697416293294808200[24] = 0;
   out_5697416293294808200[25] = 0;
   out_5697416293294808200[26] = 1;
   out_5697416293294808200[27] = 0;
   out_5697416293294808200[28] = 0;
   out_5697416293294808200[29] = 0;
   out_5697416293294808200[30] = 0;
   out_5697416293294808200[31] = 0;
   out_5697416293294808200[32] = 0;
   out_5697416293294808200[33] = 0;
   out_5697416293294808200[34] = 0;
   out_5697416293294808200[35] = 0;
   out_5697416293294808200[36] = 0;
   out_5697416293294808200[37] = 0;
   out_5697416293294808200[38] = 0;
   out_5697416293294808200[39] = 0;
   out_5697416293294808200[40] = 0;
   out_5697416293294808200[41] = 0;
   out_5697416293294808200[42] = 0;
   out_5697416293294808200[43] = 0;
   out_5697416293294808200[44] = 0;
   out_5697416293294808200[45] = 0;
   out_5697416293294808200[46] = 0;
   out_5697416293294808200[47] = 0;
   out_5697416293294808200[48] = 0;
   out_5697416293294808200[49] = 1;
   out_5697416293294808200[50] = 0;
   out_5697416293294808200[51] = 0;
   out_5697416293294808200[52] = 0;
   out_5697416293294808200[53] = 0;
   out_5697416293294808200[54] = 0;
   out_5697416293294808200[55] = 0;
   out_5697416293294808200[56] = 0;
   out_5697416293294808200[57] = 0;
   out_5697416293294808200[58] = 0;
   out_5697416293294808200[59] = 0;
   out_5697416293294808200[60] = 0;
   out_5697416293294808200[61] = 0;
   out_5697416293294808200[62] = 0;
   out_5697416293294808200[63] = 0;
   out_5697416293294808200[64] = 0;
   out_5697416293294808200[65] = 0;
   out_5697416293294808200[66] = 0;
   out_5697416293294808200[67] = 0;
   out_5697416293294808200[68] = 0;
   out_5697416293294808200[69] = 0;
   out_5697416293294808200[70] = 0;
   out_5697416293294808200[71] = 0;
   out_5697416293294808200[72] = 1;
   out_5697416293294808200[73] = 0;
   out_5697416293294808200[74] = 0;
   out_5697416293294808200[75] = 0;
   out_5697416293294808200[76] = 0;
   out_5697416293294808200[77] = 0;
   out_5697416293294808200[78] = 0;
   out_5697416293294808200[79] = 0;
   out_5697416293294808200[80] = 0;
   out_5697416293294808200[81] = 0;
   out_5697416293294808200[82] = 0;
   out_5697416293294808200[83] = 0;
   out_5697416293294808200[84] = 0;
   out_5697416293294808200[85] = 0;
   out_5697416293294808200[86] = 0;
   out_5697416293294808200[87] = 0;
}
void h_13(double *state, double *unused, double *out_6028616001746047803) {
   out_6028616001746047803[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6028616001746047803[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6028616001746047803[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1733507159111608554) {
   out_1733507159111608554[0] = 0;
   out_1733507159111608554[1] = 0;
   out_1733507159111608554[2] = 0;
   out_1733507159111608554[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1733507159111608554[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1733507159111608554[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1733507159111608554[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1733507159111608554[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1733507159111608554[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1733507159111608554[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1733507159111608554[10] = 0;
   out_1733507159111608554[11] = 0;
   out_1733507159111608554[12] = 0;
   out_1733507159111608554[13] = 0;
   out_1733507159111608554[14] = 0;
   out_1733507159111608554[15] = 0;
   out_1733507159111608554[16] = 0;
   out_1733507159111608554[17] = 0;
   out_1733507159111608554[18] = 0;
   out_1733507159111608554[19] = 0;
   out_1733507159111608554[20] = 0;
   out_1733507159111608554[21] = 0;
   out_1733507159111608554[22] = 0;
   out_1733507159111608554[23] = 0;
   out_1733507159111608554[24] = 0;
   out_1733507159111608554[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1733507159111608554[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1733507159111608554[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1733507159111608554[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1733507159111608554[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1733507159111608554[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1733507159111608554[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1733507159111608554[32] = 0;
   out_1733507159111608554[33] = 0;
   out_1733507159111608554[34] = 0;
   out_1733507159111608554[35] = 0;
   out_1733507159111608554[36] = 0;
   out_1733507159111608554[37] = 0;
   out_1733507159111608554[38] = 0;
   out_1733507159111608554[39] = 0;
   out_1733507159111608554[40] = 0;
   out_1733507159111608554[41] = 0;
   out_1733507159111608554[42] = 0;
   out_1733507159111608554[43] = 0;
   out_1733507159111608554[44] = 0;
   out_1733507159111608554[45] = 0;
   out_1733507159111608554[46] = 0;
   out_1733507159111608554[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1733507159111608554[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1733507159111608554[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1733507159111608554[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1733507159111608554[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1733507159111608554[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1733507159111608554[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1733507159111608554[54] = 0;
   out_1733507159111608554[55] = 0;
   out_1733507159111608554[56] = 0;
   out_1733507159111608554[57] = 0;
   out_1733507159111608554[58] = 0;
   out_1733507159111608554[59] = 0;
   out_1733507159111608554[60] = 0;
   out_1733507159111608554[61] = 0;
   out_1733507159111608554[62] = 0;
   out_1733507159111608554[63] = 0;
   out_1733507159111608554[64] = 0;
   out_1733507159111608554[65] = 0;
}
void h_14(double *state, double *unused, double *out_2762814744364720524) {
   out_2762814744364720524[0] = state[10];
   out_2762814744364720524[1] = state[11];
   out_2762814744364720524[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5532237483089725194) {
   out_5532237483089725194[0] = 0;
   out_5532237483089725194[1] = 0;
   out_5532237483089725194[2] = 0;
   out_5532237483089725194[3] = 0;
   out_5532237483089725194[4] = 0;
   out_5532237483089725194[5] = 0;
   out_5532237483089725194[6] = 0;
   out_5532237483089725194[7] = 0;
   out_5532237483089725194[8] = 0;
   out_5532237483089725194[9] = 0;
   out_5532237483089725194[10] = 1;
   out_5532237483089725194[11] = 0;
   out_5532237483089725194[12] = 0;
   out_5532237483089725194[13] = 0;
   out_5532237483089725194[14] = 0;
   out_5532237483089725194[15] = 0;
   out_5532237483089725194[16] = 0;
   out_5532237483089725194[17] = 0;
   out_5532237483089725194[18] = 0;
   out_5532237483089725194[19] = 0;
   out_5532237483089725194[20] = 0;
   out_5532237483089725194[21] = 0;
   out_5532237483089725194[22] = 0;
   out_5532237483089725194[23] = 0;
   out_5532237483089725194[24] = 0;
   out_5532237483089725194[25] = 0;
   out_5532237483089725194[26] = 0;
   out_5532237483089725194[27] = 0;
   out_5532237483089725194[28] = 0;
   out_5532237483089725194[29] = 0;
   out_5532237483089725194[30] = 0;
   out_5532237483089725194[31] = 0;
   out_5532237483089725194[32] = 0;
   out_5532237483089725194[33] = 1;
   out_5532237483089725194[34] = 0;
   out_5532237483089725194[35] = 0;
   out_5532237483089725194[36] = 0;
   out_5532237483089725194[37] = 0;
   out_5532237483089725194[38] = 0;
   out_5532237483089725194[39] = 0;
   out_5532237483089725194[40] = 0;
   out_5532237483089725194[41] = 0;
   out_5532237483089725194[42] = 0;
   out_5532237483089725194[43] = 0;
   out_5532237483089725194[44] = 0;
   out_5532237483089725194[45] = 0;
   out_5532237483089725194[46] = 0;
   out_5532237483089725194[47] = 0;
   out_5532237483089725194[48] = 0;
   out_5532237483089725194[49] = 0;
   out_5532237483089725194[50] = 0;
   out_5532237483089725194[51] = 0;
   out_5532237483089725194[52] = 0;
   out_5532237483089725194[53] = 0;
   out_5532237483089725194[54] = 0;
   out_5532237483089725194[55] = 0;
   out_5532237483089725194[56] = 1;
   out_5532237483089725194[57] = 0;
   out_5532237483089725194[58] = 0;
   out_5532237483089725194[59] = 0;
   out_5532237483089725194[60] = 0;
   out_5532237483089725194[61] = 0;
   out_5532237483089725194[62] = 0;
   out_5532237483089725194[63] = 0;
   out_5532237483089725194[64] = 0;
   out_5532237483089725194[65] = 0;
}
void h_33(double *state, double *unused, double *out_6754864634829922112) {
   out_6754864634829922112[0] = state[16];
   out_6754864634829922112[1] = state[17];
   out_6754864634829922112[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4762237609836742704) {
   out_4762237609836742704[0] = 0;
   out_4762237609836742704[1] = 0;
   out_4762237609836742704[2] = 0;
   out_4762237609836742704[3] = 0;
   out_4762237609836742704[4] = 0;
   out_4762237609836742704[5] = 0;
   out_4762237609836742704[6] = 0;
   out_4762237609836742704[7] = 0;
   out_4762237609836742704[8] = 0;
   out_4762237609836742704[9] = 0;
   out_4762237609836742704[10] = 0;
   out_4762237609836742704[11] = 0;
   out_4762237609836742704[12] = 0;
   out_4762237609836742704[13] = 0;
   out_4762237609836742704[14] = 0;
   out_4762237609836742704[15] = 0;
   out_4762237609836742704[16] = 1;
   out_4762237609836742704[17] = 0;
   out_4762237609836742704[18] = 0;
   out_4762237609836742704[19] = 0;
   out_4762237609836742704[20] = 0;
   out_4762237609836742704[21] = 0;
   out_4762237609836742704[22] = 0;
   out_4762237609836742704[23] = 0;
   out_4762237609836742704[24] = 0;
   out_4762237609836742704[25] = 0;
   out_4762237609836742704[26] = 0;
   out_4762237609836742704[27] = 0;
   out_4762237609836742704[28] = 0;
   out_4762237609836742704[29] = 0;
   out_4762237609836742704[30] = 0;
   out_4762237609836742704[31] = 0;
   out_4762237609836742704[32] = 0;
   out_4762237609836742704[33] = 0;
   out_4762237609836742704[34] = 0;
   out_4762237609836742704[35] = 0;
   out_4762237609836742704[36] = 0;
   out_4762237609836742704[37] = 0;
   out_4762237609836742704[38] = 0;
   out_4762237609836742704[39] = 1;
   out_4762237609836742704[40] = 0;
   out_4762237609836742704[41] = 0;
   out_4762237609836742704[42] = 0;
   out_4762237609836742704[43] = 0;
   out_4762237609836742704[44] = 0;
   out_4762237609836742704[45] = 0;
   out_4762237609836742704[46] = 0;
   out_4762237609836742704[47] = 0;
   out_4762237609836742704[48] = 0;
   out_4762237609836742704[49] = 0;
   out_4762237609836742704[50] = 0;
   out_4762237609836742704[51] = 0;
   out_4762237609836742704[52] = 0;
   out_4762237609836742704[53] = 0;
   out_4762237609836742704[54] = 0;
   out_4762237609836742704[55] = 0;
   out_4762237609836742704[56] = 0;
   out_4762237609836742704[57] = 0;
   out_4762237609836742704[58] = 0;
   out_4762237609836742704[59] = 0;
   out_4762237609836742704[60] = 0;
   out_4762237609836742704[61] = 0;
   out_4762237609836742704[62] = 1;
   out_4762237609836742704[63] = 0;
   out_4762237609836742704[64] = 0;
   out_4762237609836742704[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4230235865906954894) {
  H(in_vec, out_4230235865906954894);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7285454058321316757) {
  err_fun(nom_x, delta_x, out_7285454058321316757);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3027376436415471136) {
  inv_err_fun(nom_x, true_x, out_3027376436415471136);
}
void live_H_mod_fun(double *state, double *out_2182370620574098344) {
  H_mod_fun(state, out_2182370620574098344);
}
void live_f_fun(double *state, double dt, double *out_5392690204489221927) {
  f_fun(state,  dt, out_5392690204489221927);
}
void live_F_fun(double *state, double dt, double *out_4187189026783364532) {
  F_fun(state,  dt, out_4187189026783364532);
}
void live_h_4(double *state, double *unused, double *out_7646675726508551857) {
  h_4(state, unused, out_7646675726508551857);
}
void live_H_4(double *state, double *unused, double *out_1754981452174722276) {
  H_4(state, unused, out_1754981452174722276);
}
void live_h_9(double *state, double *unused, double *out_2762814744364720524) {
  h_9(state, unused, out_2762814744364720524);
}
void live_H_9(double *state, double *unused, double *out_5532237483089725194) {
  H_9(state, unused, out_5532237483089725194);
}
void live_h_10(double *state, double *unused, double *out_6463768574348619745) {
  h_10(state, unused, out_6463768574348619745);
}
void live_H_10(double *state, double *unused, double *out_7009897717026957061) {
  H_10(state, unused, out_7009897717026957061);
}
void live_h_12(double *state, double *unused, double *out_7053766938194549604) {
  h_12(state, unused, out_7053766938194549604);
}
void live_H_12(double *state, double *unused, double *out_8136239829217455272) {
  H_12(state, unused, out_8136239829217455272);
}
void live_h_35(double *state, double *unused, double *out_2211334445259474650) {
  h_35(state, unused, out_2211334445259474650);
}
void live_H_35(double *state, double *unused, double *out_1611680605197885100) {
  H_35(state, unused, out_1611680605197885100);
}
void live_h_32(double *state, double *unused, double *out_6811700224214412955) {
  h_32(state, unused, out_6811700224214412955);
}
void live_H_32(double *state, double *unused, double *out_5697416293294808200) {
  H_32(state, unused, out_5697416293294808200);
}
void live_h_13(double *state, double *unused, double *out_6028616001746047803) {
  h_13(state, unused, out_6028616001746047803);
}
void live_H_13(double *state, double *unused, double *out_1733507159111608554) {
  H_13(state, unused, out_1733507159111608554);
}
void live_h_14(double *state, double *unused, double *out_2762814744364720524) {
  h_14(state, unused, out_2762814744364720524);
}
void live_H_14(double *state, double *unused, double *out_5532237483089725194) {
  H_14(state, unused, out_5532237483089725194);
}
void live_h_33(double *state, double *unused, double *out_6754864634829922112) {
  h_33(state, unused, out_6754864634829922112);
}
void live_H_33(double *state, double *unused, double *out_4762237609836742704) {
  H_33(state, unused, out_4762237609836742704);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
